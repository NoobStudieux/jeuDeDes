rendu à recupérer les parties, puis MAJ des inscrits.

mesInscrits sur .ejs, majMaPartie connecte.js

La phase connexion, gestion session.joueurs est OK.

URGENT :
- socket.on('deconnexion') => reste un souci qd un inscrit non lanceur de déconnecte (sans se desinscrire précédemment
	=> à priori OK
- bloquer l'inscription au lancement
this.supprJoueur : ne fonctionne pas bien (desinscr cote client)
CLIENT ONLY : ne fonctionneront pour l'instant qu'en ouvrant les fichiers ejs directement (sans passer par l'app), puis qd la simplification des fichiers statiques sera OK cela sera possible).

une fois l'affichage des parties gérer (+ envoi) : voir MAJ inscris/désinscris
Attention, points à revoir :
- recupération parties existantes OK sauf pour le dernier connecté (surement un pb de Maj window.joueuers
- verification si le membre est déjà inscrits ou lanceur pour ne pas limiter la verfi coté client
- inscritsFromIdPartie est utile ? passer la partie directement ...
- pk l'insertion à l'inscription en table correspondances ne fonctionne pas avec les 2 foreign key
	=> mis un UNIQUE (idMembre, idPartie). Suffit ?
	
- appuyer sur entrer dans un champ (pseudo ou password) pour une connexion envoi le post
directement au lieu de passer par l'action du "faux bouton" (qui entraine un trigger du vrai post pour le traiter avant l'envoi; dans js/js_pages/accueil.js)

- le bouton quitter procède à une redirection (à voir en cas de changement d'environnement)

- connecte.js : alléger le code ne faire qu'un avec validInscr et nouvelleINscr par exemple ?)
penser à : 

- dans : js.BDD.JS : - remplacer par une jointure qui rechope l'idPartie f°(idLanceur) et etat='lancee' serait meilleur

Questions post projet : 

- passer par le DOM pour récupérer des infos joueur semble peu sur et fiable ... alternative ?
- quid sécurité ?? mot de passe en clair ect ... 
