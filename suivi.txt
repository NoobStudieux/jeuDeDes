rendu à recupérer les parties, puis MAJ des inscrits.
à priori OK pour recupération à connexion, sauf desfois window.joueurs undefined.
Pour le reste, i,scription ect à peufiner coté client sinon semble OK.

La phase connexion, gestion session.joueurs est OK.

URGENT :
- socket.on('deconnexion') => reste un souci qd un inscrit non lanceur de déconnecte (sans se desinscrire précédemment
	=> à priori OK
- bloquer l'inscription au lancement
- repercuter dans addPartie (mettre un if pour la création  du bouton)
- js/pages/connecte.js : socket.on('validInscr' : etatInscr ne s'actualise pas. Apparement mauvaise sélection de interactionsUnePartie

une fois l'affichage des parties gérer (+ envoi) : voir MAJ inscris/désinscris
Attention, points à revoir :

- verification si le membre est déjà inscrits pour ne pas limiter la verfi coté client
- inscritsFromIdPartie est utile ? passer la partie directement ...
- pk l'insertion à l'inscription en table correspondances ne fonctionne pas avec les 2 foreign key
	=> mis un UNIQUE (idMembre, idPartie). Suffit ?
	
-appuyer sur entrer dans un champ (pseudo ou password) pour une connexion envoi le post
directement au lieu de passer par l'action du "faux bouton" (qui entraine un trigger du vrai post pour le traiter avant l'envoi; dans js/js_pages/accueil.js)

-le bouton quitter procède à une redirection ( à voir en cas de changement d'environnement )

penser à : 

- dans : js.BDD.JS : - remplacer par une jointure qui rechope l'idPartie f°(idLanceur) et etat='lancee' serait meilleur

Questions post projet : 

- passer par le DOM pour récupérer des infos joueur semble peu sur et fiable ... alternative ?
- quid sécurité ?? mot de passe en clair ect ... 
